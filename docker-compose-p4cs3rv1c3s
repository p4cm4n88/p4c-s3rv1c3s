---
version: "3"
services:
   sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/sonarr_volumes/config:/config
      - ${MEDIASTORE}/Shows:/tv
      - ${MEDIADL}:/downloads
    networks:
      - traefik
      - p4c
    expose:
      - "8989"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:sonarr.${DOMAINHOST}"
      - "traefik.basic.port=8989"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/radarr_volumes/config:/config
      - ${MEDIASTORE}/Media:/movies
      - ${MEDIADL}:/downloads
    networks:
      - traefik
      - p4c
    expose:
      - "7878"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:radarr.${DOMAINHOST}"
      - "traefik.basic.port=7878"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/tautulli_volumes/config:/config
      - /dummydir/logs:/logs
    networks:
      - traefik
      - p4c
    expose:
      - "8181"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:tautulli.${DOMAINHOST}"
      - "traefik.basic.port=8181"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   transmission:
    image: haugene/transmission-openvpn
    container_name: transmission
    env_file:
      - transmission-env.env
    cap_add:
      - SYS_PTRACE
      - NET_ADMIN
    devices:
      - /dev/net/tun
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ${DOCKER_VOL}/transmission_volumes/config:/config
      - ${MEDIADL}:/downloads
      - /dummydir/watch:/watch
      - /etc/localtime:/etc/localtime:ro
    networks:
      - traefik
      - p4c
    expose:
      - "9091"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:transmission.${DOMAINHOST}"
      - "traefik.basic.port=9091"
      - "traefik.basic.protocol=http"
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
   jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/jackett_volumes/config:/config
      - ${MEDIADL}:/downloads
    networks:
      - traefik
      - p4c
    expose:
      - "9117"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:jackett.${DOMAINHOST}"
      - "traefik.basic.port=9117"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/bazarr_volumes/config:/config
      - ${MEDIASTORE}/Media:/movies
      - ${MEDIASTORE}/Shows:/tv
    networks:
      - traefik
      - p4c
    expose:
      - "6767"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:bazarr.${DOMAINHOST}"
      - "traefik.basic.port=6767"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/ombi_volumes/config:/config
    networks:
      - traefik
      - p4c
    expose:
      - "3579"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:ombi.${DOMAINHOST}"
      - "traefik.basic.port=3579"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   organizr:
    image: organizrtools/organizr-v2
    container_name: organizr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_VOL}/organizr_volumes/config:/config
    networks:
      - traefik
      - p4c
    expose:
      - "80"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:organizr.${DOMAINHOST}"
      - "traefik.basic.port=80"
      - "traefik.basic.protocol=http"
    restart: always
   netdata:
    image: netdata/netdata
    hostname: https://netdata.${DOMAINHOST}
    container_name: netdata
    networks:
      - traefik
      - p4c
    expose:
      - "19999"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:netdata.${DOMAINHOST}"
      - "traefik.basic.port=19999"
      - "traefik.basic.protocol=http"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
   jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
     - PUID=${PUID}
     - PGID=${PGID}
    volumes:
      - ${DOCKER_VOL}/jellyfin_volumes/config:/config
      - ${DOCKER_VOL}/jellyfin_volumes/cache:/cache
    networks:
      - traefik
      - p4c
    expose:
      - "8096"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:jellyfin.${DOMAINHOST}"
      - "traefik.basic.port=8096"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   guac:
    image: oznu/guacamole 
    container_name: guac
    volumes:
     - ${DOCKER_VOL}/guac_volumes/config:/config
    networks:
      - traefik
      - p4c
    expose:
      - "8080"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:g4ac.${DOMAINHOST}"
      - "traefik.basic.port=8080"
      - "traefik.basic.protocol=http"
    restart: unless-stopped
   varken:
    image: boerderij/varken 
    container_name: varken
    environment:
     - PUID=${PUID}
     - PGID=${PGID}
     - TZ=${TZ}
    networks:
      - traefik
      - p4c
    volumes:
     - ${DOCKER_VOL}/varken_volumes/config:/config
    restart: unless-stopped
   whoami:
    image: emilevauge/whoami
    container_name: whoami
    networks:
      - traefik
      - p4c
    expose:
      - "80"
    labels:
      - traefik.enable=true
      - "traefik.docker.network=traefik"
      - "traefik.basic.port=8080"
      - "traefik.basic.frontend.rule=Host::whoami.${DOMAINHOST}"
   watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    networks:
      - p4c
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
   portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    environment:
      - TZ=${TZ}
    networks:
      - traefik
      - p4c
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - ${DOCKER_VOL}/portainer_volumes/data:/data
    expose:
      - "9000"
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:portainer.${DOMAINHOST}"
      - "traefik.basic.port=9000"
      - "traefik.basic.protocol=http"
    restart: always
   traefik:
    image: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8089:8080
    environment:
      - CF_API_EMAIL=liqhollywd@gmail.com
      - CF_API_KEY=197b49824f4693b02da6e42980673f77420c0
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_VOL}/traefik_volumes/config/:/etc/traefik/
      - ${DOCKER_VOL}/traefik_volumes/config/acme.json:/etc/traefik/acme/acme.json
    container_name: traefik
networks:
   traefik:
    external: true
   p4c:
    external: true
